Terminals unused in grammar

   NEW
   CONTINUE
   BREAK
   RETURN


Rules useless in parser due to conflicts

   38 while_middle_block: %empty

   43 for_middle_block: %empty

   48 if_middle_block: %empty


State 164 conflicts: 1 shift/reduce
State 165 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: instr END_OF_INSTR input
    2      | END_OF_INSTR input
    3      | OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG input
    4      | %empty

    5 data_init: GLOBAL data_type
    6          | STATIC data_type
    7          | data_type
    8          | GLOBAL array_init
    9          | STATIC array_init
   10          | array_init

   11 array_init: data_type SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   12           | data_type SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE

   13 data_type: INT_TYPE
   14          | REAL_TYPE
   15          | BOOL_TYPE
   16          | CHAR_TYPE

   17 instr: data_init ID
   18      | data_init ID ASSIGN expr
   19      | if_instr
   20      | for_instr
   21      | while_instr
   22      | expr
   23      | fun_init
   24      | fun_call

   25 comma_exp_init: comma_exp_init data_type ID ELEM_SEPARATOR
   26               | %empty

   27 comma_exp: comma_exp expr ELEM_SEPARATOR
   28          | %empty

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   30         | FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR
   32         | FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

   33 fun_call: ID PARETHESES_OPEN comma_exp PARETHESES_CLOSE END_OF_INSTR

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   38                   | %empty

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   43                 | %empty

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   48                | %empty

   49 array_access: SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   50 expr: ID

   51 @1: %empty

   52 expr: ID array_access @1 ID ASSIGN term
   53     | ID array_access ASSIGN expr
   54     | expr SUM term
   55     | expr SUBSTRACT term
   56     | INCREMENT ID
   57     | ID INCREMENT
   58     | DECREMENT ID
   59     | ID DECREMENT
   60     | expr LESS term
   61     | expr LESS_EQUALS term
   62     | expr GREATER term
   63     | expr GREATER_EQUALS term
   64     | expr EQUALS term
   65     | expr NOT_EQUALS term
   66     | expr AND term
   67     | expr OR term
   68     | NOT term
   69     | expr AND_BIT term
   70     | expr OR_BIT term
   71     | expr XOR_BIT term
   72     | expr LEFT_SHIFT term
   73     | expr RIGHT_SHIFT term
   74     | expr UNION term
   75     | expr DIFFERENCE term
   76     | expr INTERSECTION term
   77     | term
   78     | data_vector

   79 term: term PRODUCT power
   80     | term DIVIDE power
   81     | term MODULUS power
   82     | power

   83 power: power RADICAL factor
   84      | power POWER factor
   85      | factor

   86 factor: PARETHESES_OPEN expr PARETHESES_CLOSE
   87       | data_value

   88 data_value: INT_VAL
   89           | SUBSTRACT INT_VAL
   90           | REAL_VAL
   91           | SUBSTRACT REAL_VAL
   92           | BOOL_VAL
   93           | CHAR_QUOTE CHAR_VAL CHAR_QUOTE
   94           | STRING_QUOTE STRING_VAL STRING_QUOTE

   95 data_vector: CURLY_BRACKET_OPEN comma_exp CURLY_BRACKET_CLOSE


Terminals, with rules where they appear

$end (0) 0
error (256)
NEW (258)
CONTINUE (259)
BREAK (260)
RETURN (261)
FUN (262) 29 30 31 32
GLOBAL (263) 5 8
STATIC (264) 6 9
INT_VAL (265) 11 49 88 89
REAL_VAL (266) 90 91
BOOL_VAL (267) 92
CHAR_VAL (268) 93
STRING_VAL (269) 94
INT_TYPE (270) 13
REAL_TYPE (271) 14
BOOL_TYPE (272) 15
CHAR_TYPE (273) 16
VOID (274) 30 32
ASSIGN (275) 18 52 53
SUM (276) 54
SUBSTRACT (277) 55 89 91
PRODUCT (278) 79
DIVIDE (279) 80
MODULUS (280) 81
POWER (281) 84
RADICAL (282) 83
INCREMENT (283) 56 57
DECREMENT (284) 58 59
AND (285) 66
OR (286) 67
NOT (287) 68
EQUALS (288) 64
NOT_EQUALS (289) 65
GREATER (290) 62
GREATER_EQUALS (291) 63
LESS (292) 60
LESS_EQUALS (293) 61
AND_BIT (294) 69
OR_BIT (295) 70
XOR_BIT (296) 71
LEFT_SHIFT (297) 72
RIGHT_SHIFT (298) 73
UNION (299) 74
DIFFERENCE (300) 75
INTERSECTION (301) 76
IF_CLAUSE (302) 44 45 46 47
FOR_WHILE_CLAUSE (303) 34 35 36 37 39 40 41 42
HEADER_END (304) 29 30 34 35 36 37 39 40 41 42 44 45 46 47
ELSE_IF_FOR_WHILE_CLAUSE (305) 34 35 37 39 40 42 44 45 47
SQUARE_BRACKET_OPEN (306) 11 12 49
SQUARE_BRACKET_CLOSE (307) 11 12 49
CURLY_BRACKET_OPEN (308) 95
CURLY_BRACKET_CLOSE (309) 95
ELEM_SEPARATOR (310) 25 27
PARETHESES_OPEN (311) 29 30 31 32 33 86
PARETHESES_CLOSE (312) 29 30 31 32 33 86
END_OF_INSTR (313) 1 2 29 30 31 32 33 34 35 36 37 39 40 41 42 44 45
    46 47
OPEN_CONTEXT_TAG (314) 3 29 30 34 35 36 37 39 40 41 42 44 45 46 47
CLOSE_CONTEXT_TAG (315) 3 29 30 34 35 36 37 39 40 41 42 44 45 46 47
CHAR_QUOTE (316) 93
STRING_QUOTE (317) 94
ID (318) 17 18 25 29 30 31 32 33 50 52 53 56 57 58 59


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
input (65)
    on left: 1 2 3 4, on right: 0 1 2 3 29 30 34 35 36 37 39 40 41
    42 44 45 46 47
data_init (66)
    on left: 5 6 7 8 9 10, on right: 17 18
array_init (67)
    on left: 11 12, on right: 8 9 10
data_type (68)
    on left: 13 14 15 16, on right: 5 6 7 11 12 25 29 31
instr (69)
    on left: 17 18 19 20 21 22 23 24, on right: 1
comma_exp_init (70)
    on left: 25 26, on right: 25 29 30 31 32
comma_exp (71)
    on left: 27 28, on right: 27 33 95
fun_init (72)
    on left: 29 30 31 32, on right: 23
fun_call (73)
    on left: 33, on right: 24
while_instr (74)
    on left: 34 35 36, on right: 21
while_middle_block (75)
    on left: 37 38, on right: 34 37
for_instr (76)
    on left: 39 40 41, on right: 20
for_middle_block (77)
    on left: 42 43, on right: 39 42
if_instr (78)
    on left: 44 45 46, on right: 19
if_middle_block (79)
    on left: 47 48, on right: 44 47
array_access (80)
    on left: 49, on right: 52 53
expr (81)
    on left: 50 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76 77 78, on right: 18 22 27 34 35 36 37 39
    40 41 42 44 45 46 47 53 54 55 60 61 62 63 64 65 66 67 69 70 71
    72 73 74 75 76 86
@1 (82)
    on left: 51, on right: 52
term (83)
    on left: 79 80 81 82, on right: 52 54 55 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76 77 79 80 81
power (84)
    on left: 83 84 85, on right: 79 80 81 82 83 84
factor (85)
    on left: 86 87, on right: 83 84 85
data_value (86)
    on left: 88 89 90 91 92 93 94, on right: 87
data_vector (87)
    on left: 95, on right: 78


State 0

    0 $accept: . input $end

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 22
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 1

   29 fun_init: FUN . data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   30         | FUN . VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN . data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR
   32         | FUN . VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    INT_TYPE   shift, and go to state 7
    REAL_TYPE  shift, and go to state 8
    BOOL_TYPE  shift, and go to state 9
    CHAR_TYPE  shift, and go to state 10
    VOID       shift, and go to state 38

    data_type  go to state 39


State 2

    5 data_init: GLOBAL . data_type
    8          | GLOBAL . array_init

    INT_TYPE   shift, and go to state 7
    REAL_TYPE  shift, and go to state 8
    BOOL_TYPE  shift, and go to state 9
    CHAR_TYPE  shift, and go to state 10

    array_init  go to state 40
    data_type   go to state 41


State 3

    6 data_init: STATIC . data_type
    9          | STATIC . array_init

    INT_TYPE   shift, and go to state 7
    REAL_TYPE  shift, and go to state 8
    BOOL_TYPE  shift, and go to state 9
    CHAR_TYPE  shift, and go to state 10

    array_init  go to state 42
    data_type   go to state 43


State 4

   88 data_value: INT_VAL .

    $default  reduce using rule 88 (data_value)


State 5

   90 data_value: REAL_VAL .

    $default  reduce using rule 90 (data_value)


State 6

   92 data_value: BOOL_VAL .

    $default  reduce using rule 92 (data_value)


State 7

   13 data_type: INT_TYPE .

    $default  reduce using rule 13 (data_type)


State 8

   14 data_type: REAL_TYPE .

    $default  reduce using rule 14 (data_type)


State 9

   15 data_type: BOOL_TYPE .

    $default  reduce using rule 15 (data_type)


State 10

   16 data_type: CHAR_TYPE .

    $default  reduce using rule 16 (data_type)


State 11

   89 data_value: SUBSTRACT . INT_VAL
   91           | SUBSTRACT . REAL_VAL

    INT_VAL   shift, and go to state 44
    REAL_VAL  shift, and go to state 45


State 12

   56 expr: INCREMENT . ID

    ID  shift, and go to state 46


State 13

   58 expr: DECREMENT . ID

    ID  shift, and go to state 47


State 14

   68 expr: NOT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 48
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 15

   95 data_vector: CURLY_BRACKET_OPEN . comma_exp CURLY_BRACKET_CLOSE

    $default  reduce using rule 28 (comma_exp)

    comma_exp  go to state 49


State 16

   86 factor: PARETHESES_OPEN . expr PARETHESES_CLOSE

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 51
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 17

    2 input: END_OF_INSTR . input

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 52
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 18

    3 input: OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG input

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 53
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 19

   93 data_value: CHAR_QUOTE . CHAR_VAL CHAR_QUOTE

    CHAR_VAL  shift, and go to state 54


State 20

   94 data_value: STRING_QUOTE . STRING_VAL STRING_QUOTE

    STRING_VAL  shift, and go to state 55


State 21

   33 fun_call: ID . PARETHESES_OPEN comma_exp PARETHESES_CLOSE END_OF_INSTR
   50 expr: ID .
   52     | ID . array_access @1 ID ASSIGN term
   53     | ID . array_access ASSIGN expr
   57     | ID . INCREMENT
   59     | ID . DECREMENT

    INCREMENT            shift, and go to state 56
    DECREMENT            shift, and go to state 57
    SQUARE_BRACKET_OPEN  shift, and go to state 58
    PARETHESES_OPEN      shift, and go to state 59

    $default  reduce using rule 50 (expr)

    array_access  go to state 60


State 22

    0 $accept: input . $end

    $end  shift, and go to state 61


State 23

   17 instr: data_init . ID
   18      | data_init . ID ASSIGN expr

    ID  shift, and go to state 62


State 24

   10 data_init: array_init .

    $default  reduce using rule 10 (data_init)


State 25

    7 data_init: data_type .
   11 array_init: data_type . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   12           | data_type . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 63

    $default  reduce using rule 7 (data_init)


State 26

    1 input: instr . END_OF_INSTR input

    END_OF_INSTR  shift, and go to state 64


State 27

   23 instr: fun_init .

    $default  reduce using rule 23 (instr)


State 28

   24 instr: fun_call .

    $default  reduce using rule 24 (instr)


State 29

   21 instr: while_instr .

    $default  reduce using rule 21 (instr)


State 30

   20 instr: for_instr .

    $default  reduce using rule 20 (instr)


State 31

   19 instr: if_instr .

    $default  reduce using rule 19 (instr)


State 32

   22 instr: expr .
   34 while_instr: expr . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   39 for_instr: expr . FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr . FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr . FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   44 if_instr: expr . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM               shift, and go to state 65
    SUBSTRACT         shift, and go to state 66
    AND               shift, and go to state 67
    OR                shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    GREATER           shift, and go to state 71
    GREATER_EQUALS    shift, and go to state 72
    LESS              shift, and go to state 73
    LESS_EQUALS       shift, and go to state 74
    AND_BIT           shift, and go to state 75
    OR_BIT            shift, and go to state 76
    XOR_BIT           shift, and go to state 77
    LEFT_SHIFT        shift, and go to state 78
    RIGHT_SHIFT       shift, and go to state 79
    UNION             shift, and go to state 80
    DIFFERENCE        shift, and go to state 81
    INTERSECTION      shift, and go to state 82
    IF_CLAUSE         shift, and go to state 83
    FOR_WHILE_CLAUSE  shift, and go to state 84

    $default  reduce using rule 22 (instr)


State 33

   77 expr: term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 77 (expr)


State 34

   82 term: power .
   83 power: power . RADICAL factor
   84      | power . POWER factor

    POWER    shift, and go to state 88
    RADICAL  shift, and go to state 89

    $default  reduce using rule 82 (term)


State 35

   85 power: factor .

    $default  reduce using rule 85 (power)


State 36

   87 factor: data_value .

    $default  reduce using rule 87 (factor)


State 37

   78 expr: data_vector .

    $default  reduce using rule 78 (expr)


State 38

   30 fun_init: FUN VOID . ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   32         | FUN VOID . ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    ID  shift, and go to state 90


State 39

   29 fun_init: FUN data_type . ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type . ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    ID  shift, and go to state 91


State 40

    8 data_init: GLOBAL array_init .

    $default  reduce using rule 8 (data_init)


State 41

    5 data_init: GLOBAL data_type .
   11 array_init: data_type . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   12           | data_type . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 63

    $default  reduce using rule 5 (data_init)


State 42

    9 data_init: STATIC array_init .

    $default  reduce using rule 9 (data_init)


State 43

    6 data_init: STATIC data_type .
   11 array_init: data_type . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   12           | data_type . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 63

    $default  reduce using rule 6 (data_init)


State 44

   89 data_value: SUBSTRACT INT_VAL .

    $default  reduce using rule 89 (data_value)


State 45

   91 data_value: SUBSTRACT REAL_VAL .

    $default  reduce using rule 91 (data_value)


State 46

   56 expr: INCREMENT ID .

    $default  reduce using rule 56 (expr)


State 47

   58 expr: DECREMENT ID .

    $default  reduce using rule 58 (expr)


State 48

   68 expr: NOT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 68 (expr)


State 49

   27 comma_exp: comma_exp . expr ELEM_SEPARATOR
   95 data_vector: CURLY_BRACKET_OPEN comma_exp . CURLY_BRACKET_CLOSE

    INT_VAL              shift, and go to state 4
    REAL_VAL             shift, and go to state 5
    BOOL_VAL             shift, and go to state 6
    SUBSTRACT            shift, and go to state 11
    INCREMENT            shift, and go to state 12
    DECREMENT            shift, and go to state 13
    NOT                  shift, and go to state 14
    CURLY_BRACKET_OPEN   shift, and go to state 15
    CURLY_BRACKET_CLOSE  shift, and go to state 92
    PARETHESES_OPEN      shift, and go to state 16
    CHAR_QUOTE           shift, and go to state 19
    STRING_QUOTE         shift, and go to state 20
    ID                   shift, and go to state 50

    expr         go to state 93
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 50

   50 expr: ID .
   52     | ID . array_access @1 ID ASSIGN term
   53     | ID . array_access ASSIGN expr
   57     | ID . INCREMENT
   59     | ID . DECREMENT

    INCREMENT            shift, and go to state 56
    DECREMENT            shift, and go to state 57
    SQUARE_BRACKET_OPEN  shift, and go to state 58

    $default  reduce using rule 50 (expr)

    array_access  go to state 60


State 51

   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term
   86 factor: PARETHESES_OPEN expr . PARETHESES_CLOSE

    SUM               shift, and go to state 65
    SUBSTRACT         shift, and go to state 66
    AND               shift, and go to state 67
    OR                shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    GREATER           shift, and go to state 71
    GREATER_EQUALS    shift, and go to state 72
    LESS              shift, and go to state 73
    LESS_EQUALS       shift, and go to state 74
    AND_BIT           shift, and go to state 75
    OR_BIT            shift, and go to state 76
    XOR_BIT           shift, and go to state 77
    LEFT_SHIFT        shift, and go to state 78
    RIGHT_SHIFT       shift, and go to state 79
    UNION             shift, and go to state 80
    DIFFERENCE        shift, and go to state 81
    INTERSECTION      shift, and go to state 82
    PARETHESES_CLOSE  shift, and go to state 94


State 52

    2 input: END_OF_INSTR input .

    $default  reduce using rule 2 (input)


State 53

    3 input: OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG input

    CLOSE_CONTEXT_TAG  shift, and go to state 95


State 54

   93 data_value: CHAR_QUOTE CHAR_VAL . CHAR_QUOTE

    CHAR_QUOTE  shift, and go to state 96


State 55

   94 data_value: STRING_QUOTE STRING_VAL . STRING_QUOTE

    STRING_QUOTE  shift, and go to state 97


State 56

   57 expr: ID INCREMENT .

    $default  reduce using rule 57 (expr)


State 57

   59 expr: ID DECREMENT .

    $default  reduce using rule 59 (expr)


State 58

   49 array_access: SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  shift, and go to state 98


State 59

   33 fun_call: ID PARETHESES_OPEN . comma_exp PARETHESES_CLOSE END_OF_INSTR

    $default  reduce using rule 28 (comma_exp)

    comma_exp  go to state 99


State 60

   52 expr: ID array_access . @1 ID ASSIGN term
   53     | ID array_access . ASSIGN expr

    ASSIGN  shift, and go to state 100

    $default  reduce using rule 51 (@1)

    @1  go to state 101


State 61

    0 $accept: input $end .

    $default  accept


State 62

   17 instr: data_init ID .
   18      | data_init ID . ASSIGN expr

    ASSIGN  shift, and go to state 102

    $default  reduce using rule 17 (instr)


State 63

   11 array_init: data_type SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE
   12           | data_type SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE

    INT_VAL               shift, and go to state 103
    SQUARE_BRACKET_CLOSE  shift, and go to state 104


State 64

    1 input: instr END_OF_INSTR . input

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 105
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 65

   54 expr: expr SUM . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 106
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 66

   55 expr: expr SUBSTRACT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 107
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 67

   66 expr: expr AND . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 108
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 68

   67 expr: expr OR . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 109
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 69

   64 expr: expr EQUALS . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 110
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 70

   65 expr: expr NOT_EQUALS . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 111
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 71

   62 expr: expr GREATER . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 112
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 72

   63 expr: expr GREATER_EQUALS . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 113
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 73

   60 expr: expr LESS . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 114
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 74

   61 expr: expr LESS_EQUALS . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 115
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 75

   69 expr: expr AND_BIT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 116
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 76

   70 expr: expr OR_BIT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 117
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 77

   71 expr: expr XOR_BIT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 118
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 78

   72 expr: expr LEFT_SHIFT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 119
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 79

   73 expr: expr RIGHT_SHIFT . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 120
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 80

   74 expr: expr UNION . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 121
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 81

   75 expr: expr DIFFERENCE . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 122
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 82

   76 expr: expr INTERSECTION . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 123
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 83

   44 if_instr: expr IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 124


State 84

   34 while_instr: expr FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   39 for_instr: expr FOR_WHILE_CLAUSE . expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE . expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE . expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    HEADER_END          shift, and go to state 125
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 126
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 85

   79 term: term PRODUCT . power

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    power       go to state 127
    factor      go to state 35
    data_value  go to state 36


State 86

   80 term: term DIVIDE . power

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    power       go to state 128
    factor      go to state 35
    data_value  go to state 36


State 87

   81 term: term MODULUS . power

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    power       go to state 129
    factor      go to state 35
    data_value  go to state 36


State 88

   84 power: power POWER . factor

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    factor      go to state 130
    data_value  go to state 36


State 89

   83 power: power RADICAL . factor

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    factor      go to state 131
    data_value  go to state 36


State 90

   30 fun_init: FUN VOID ID . PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   32         | FUN VOID ID . PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    PARETHESES_OPEN  shift, and go to state 132


State 91

   29 fun_init: FUN data_type ID . PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type ID . PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    PARETHESES_OPEN  shift, and go to state 133


State 92

   95 data_vector: CURLY_BRACKET_OPEN comma_exp CURLY_BRACKET_CLOSE .

    $default  reduce using rule 95 (data_vector)


State 93

   27 comma_exp: comma_exp expr . ELEM_SEPARATOR
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82
    ELEM_SEPARATOR  shift, and go to state 134


State 94

   86 factor: PARETHESES_OPEN expr PARETHESES_CLOSE .

    $default  reduce using rule 86 (factor)


State 95

    3 input: OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . input

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 135
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 96

   93 data_value: CHAR_QUOTE CHAR_VAL CHAR_QUOTE .

    $default  reduce using rule 93 (data_value)


State 97

   94 data_value: STRING_QUOTE STRING_VAL STRING_QUOTE .

    $default  reduce using rule 94 (data_value)


State 98

   49 array_access: SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 136


State 99

   27 comma_exp: comma_exp . expr ELEM_SEPARATOR
   33 fun_call: ID PARETHESES_OPEN comma_exp . PARETHESES_CLOSE END_OF_INSTR

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    PARETHESES_CLOSE    shift, and go to state 137
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 93
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 100

   53 expr: ID array_access ASSIGN . expr

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 138
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 101

   52 expr: ID array_access @1 . ID ASSIGN term

    ID  shift, and go to state 139


State 102

   18 instr: data_init ID ASSIGN . expr

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 140
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 103

   11 array_init: data_type SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 141


State 104

   12 array_init: data_type SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 12 (array_init)


State 105

    1 input: instr END_OF_INSTR input .

    $default  reduce using rule 1 (input)


State 106

   54 expr: expr SUM term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 54 (expr)


State 107

   55 expr: expr SUBSTRACT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 55 (expr)


State 108

   66 expr: expr AND term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 66 (expr)


State 109

   67 expr: expr OR term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 67 (expr)


State 110

   64 expr: expr EQUALS term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 64 (expr)


State 111

   65 expr: expr NOT_EQUALS term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 65 (expr)


State 112

   62 expr: expr GREATER term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 62 (expr)


State 113

   63 expr: expr GREATER_EQUALS term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 63 (expr)


State 114

   60 expr: expr LESS term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 60 (expr)


State 115

   61 expr: expr LESS_EQUALS term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 61 (expr)


State 116

   69 expr: expr AND_BIT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 69 (expr)


State 117

   70 expr: expr OR_BIT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 70 (expr)


State 118

   71 expr: expr XOR_BIT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 71 (expr)


State 119

   72 expr: expr LEFT_SHIFT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 72 (expr)


State 120

   73 expr: expr RIGHT_SHIFT term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 73 (expr)


State 121

   74 expr: expr UNION term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 74 (expr)


State 122

   75 expr: expr DIFFERENCE term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 75 (expr)


State 123

   76 expr: expr INTERSECTION term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 76 (expr)


State 124

   44 if_instr: expr IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 142


State 125

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 143


State 126

   39 for_instr: expr FOR_WHILE_CLAUSE expr . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82
    HEADER_END      shift, and go to state 144


State 127

   79 term: term PRODUCT power .
   83 power: power . RADICAL factor
   84      | power . POWER factor

    POWER    shift, and go to state 88
    RADICAL  shift, and go to state 89

    $default  reduce using rule 79 (term)


State 128

   80 term: term DIVIDE power .
   83 power: power . RADICAL factor
   84      | power . POWER factor

    POWER    shift, and go to state 88
    RADICAL  shift, and go to state 89

    $default  reduce using rule 80 (term)


State 129

   81 term: term MODULUS power .
   83 power: power . RADICAL factor
   84      | power . POWER factor

    POWER    shift, and go to state 88
    RADICAL  shift, and go to state 89

    $default  reduce using rule 81 (term)


State 130

   84 power: power POWER factor .

    $default  reduce using rule 84 (power)


State 131

   83 power: power RADICAL factor .

    $default  reduce using rule 83 (power)


State 132

   30 fun_init: FUN VOID ID PARETHESES_OPEN . comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   32         | FUN VOID ID PARETHESES_OPEN . comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    $default  reduce using rule 26 (comma_exp_init)

    comma_exp_init  go to state 145


State 133

   29 fun_init: FUN data_type ID PARETHESES_OPEN . comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type ID PARETHESES_OPEN . comma_exp_init PARETHESES_CLOSE END_OF_INSTR

    $default  reduce using rule 26 (comma_exp_init)

    comma_exp_init  go to state 146


State 134

   27 comma_exp: comma_exp expr ELEM_SEPARATOR .

    $default  reduce using rule 27 (comma_exp)


State 135

    3 input: OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG input .

    $default  reduce using rule 3 (input)


State 136

   49 array_access: SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 49 (array_access)


State 137

   33 fun_call: ID PARETHESES_OPEN comma_exp PARETHESES_CLOSE . END_OF_INSTR

    END_OF_INSTR  shift, and go to state 147


State 138

   53 expr: ID array_access ASSIGN expr .
   54     | expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82

    $default  reduce using rule 53 (expr)


State 139

   52 expr: ID array_access @1 ID . ASSIGN term

    ASSIGN  shift, and go to state 148


State 140

   18 instr: data_init ID ASSIGN expr .
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82

    $default  reduce using rule 18 (instr)


State 141

   11 array_init: data_type SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 11 (array_init)


State 142

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 149


State 143

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 150


State 144

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 151


State 145

   25 comma_exp_init: comma_exp_init . data_type ID ELEM_SEPARATOR
   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init . PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   32         | FUN VOID ID PARETHESES_OPEN comma_exp_init . PARETHESES_CLOSE END_OF_INSTR

    INT_TYPE          shift, and go to state 7
    REAL_TYPE         shift, and go to state 8
    BOOL_TYPE         shift, and go to state 9
    CHAR_TYPE         shift, and go to state 10
    PARETHESES_CLOSE  shift, and go to state 152

    data_type  go to state 153


State 146

   25 comma_exp_init: comma_exp_init . data_type ID ELEM_SEPARATOR
   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init . PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type ID PARETHESES_OPEN comma_exp_init . PARETHESES_CLOSE END_OF_INSTR

    INT_TYPE          shift, and go to state 7
    REAL_TYPE         shift, and go to state 8
    BOOL_TYPE         shift, and go to state 9
    CHAR_TYPE         shift, and go to state 10
    PARETHESES_CLOSE  shift, and go to state 154

    data_type  go to state 153


State 147

   33 fun_call: ID PARETHESES_OPEN comma_exp PARETHESES_CLOSE END_OF_INSTR .

    $default  reduce using rule 33 (fun_call)


State 148

   52 expr: ID array_access @1 ID ASSIGN . term

    INT_VAL          shift, and go to state 4
    REAL_VAL         shift, and go to state 5
    BOOL_VAL         shift, and go to state 6
    SUBSTRACT        shift, and go to state 11
    PARETHESES_OPEN  shift, and go to state 16
    CHAR_QUOTE       shift, and go to state 19
    STRING_QUOTE     shift, and go to state 20

    term        go to state 155
    power       go to state 34
    factor      go to state 35
    data_value  go to state 36


State 149

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 156
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 150

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 157
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 151

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 158


State 152

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   32         | FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE . END_OF_INSTR

    HEADER_END    shift, and go to state 159
    END_OF_INSTR  shift, and go to state 160


State 153

   25 comma_exp_init: comma_exp_init data_type . ID ELEM_SEPARATOR

    ID  shift, and go to state 161


State 154

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   31         | FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE . END_OF_INSTR

    HEADER_END    shift, and go to state 162
    END_OF_INSTR  shift, and go to state 163


State 155

   52 expr: ID array_access @1 ID ASSIGN term .
   79 term: term . PRODUCT power
   80     | term . DIVIDE power
   81     | term . MODULUS power

    PRODUCT  shift, and go to state 85
    DIVIDE   shift, and go to state 86
    MODULUS  shift, and go to state 87

    $default  reduce using rule 52 (expr)


State 156

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 164


State 157

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 165


State 158

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 166
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 159

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 167


State 160

   32 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR .

    $default  reduce using rule 32 (fun_init)


State 161

   25 comma_exp_init: comma_exp_init data_type ID . ELEM_SEPARATOR

    ELEM_SEPARATOR  shift, and go to state 168


State 162

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 169


State 163

   31 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE END_OF_INSTR .

    $default  reduce using rule 31 (fun_init)


State 164

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   45         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   46         | expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 170

    ELSE_IF_FOR_WHILE_CLAUSE  [reduce using rule 48 (if_middle_block)]
    $default                  reduce using rule 46 (if_instr)

    if_middle_block  go to state 171


State 165

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   35            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   36            | expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 172

    ELSE_IF_FOR_WHILE_CLAUSE  [reduce using rule 38 (while_middle_block)]
    $default                  reduce using rule 36 (while_instr)

    while_middle_block  go to state 173


State 166

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 174


State 167

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 175


State 168

   25 comma_exp_init: comma_exp_init data_type ID ELEM_SEPARATOR .

    $default  reduce using rule 25 (comma_exp_init)


State 169

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 176


State 170

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    IF_CLAUSE  shift, and go to state 177


State 171

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block . ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   47 if_middle_block: if_middle_block . ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 178


State 172

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    FOR_WHILE_CLAUSE  shift, and go to state 179


State 173

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block . ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   37 while_middle_block: while_middle_block . ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 180


State 174

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   40          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG . ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   41          | expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 181

    ELSE_IF_FOR_WHILE_CLAUSE  [reduce using rule 43 (for_middle_block)]
    $default                  reduce using rule 41 (for_instr)

    for_middle_block  go to state 182


State 175

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 183
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 176

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 184
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 177

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 185


State 178

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE . expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    IF_CLAUSE           shift, and go to state 186
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 187
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 179

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 188


State 180

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE . expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    FOR_WHILE_CLAUSE    shift, and go to state 189
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 190
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 181

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    FOR_WHILE_CLAUSE  shift, and go to state 191


State 182

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block . ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   42 for_middle_block: for_middle_block . ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    ELSE_IF_FOR_WHILE_CLAUSE  shift, and go to state 192


State 183

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 193


State 184

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 194


State 185

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 195


State 186

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 196


State 187

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr . IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82
    IF_CLAUSE       shift, and go to state 197


State 188

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 198


State 189

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 199


State 190

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM               shift, and go to state 65
    SUBSTRACT         shift, and go to state 66
    AND               shift, and go to state 67
    OR                shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    GREATER           shift, and go to state 71
    GREATER_EQUALS    shift, and go to state 72
    LESS              shift, and go to state 73
    LESS_EQUALS       shift, and go to state 74
    AND_BIT           shift, and go to state 75
    OR_BIT            shift, and go to state 76
    XOR_BIT           shift, and go to state 77
    LEFT_SHIFT        shift, and go to state 78
    RIGHT_SHIFT       shift, and go to state 79
    UNION             shift, and go to state 80
    DIFFERENCE        shift, and go to state 81
    INTERSECTION      shift, and go to state 82
    FOR_WHILE_CLAUSE  shift, and go to state 200


State 191

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 201


State 192

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE . FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE . expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    FOR_WHILE_CLAUSE    shift, and go to state 202
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 203
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 193

   30 fun_init: FUN VOID ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 30 (fun_init)


State 194

   29 fun_init: FUN data_type ID PARETHESES_OPEN comma_exp_init PARETHESES_CLOSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 29 (fun_init)


State 195

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 204


State 196

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 205


State 197

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 206


State 198

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 207


State 199

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 208


State 200

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 209


State 201

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 210


State 202

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    HEADER_END  shift, and go to state 211


State 203

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr . FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM               shift, and go to state 65
    SUBSTRACT         shift, and go to state 66
    AND               shift, and go to state 67
    OR                shift, and go to state 68
    EQUALS            shift, and go to state 69
    NOT_EQUALS        shift, and go to state 70
    GREATER           shift, and go to state 71
    GREATER_EQUALS    shift, and go to state 72
    LESS              shift, and go to state 73
    LESS_EQUALS       shift, and go to state 74
    AND_BIT           shift, and go to state 75
    OR_BIT            shift, and go to state 76
    XOR_BIT           shift, and go to state 77
    LEFT_SHIFT        shift, and go to state 78
    RIGHT_SHIFT       shift, and go to state 79
    UNION             shift, and go to state 80
    DIFFERENCE        shift, and go to state 81
    INTERSECTION      shift, and go to state 82
    FOR_WHILE_CLAUSE  shift, and go to state 212


State 204

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 213
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 205

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 214


State 206

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 215


State 207

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 216
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 208

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 217


State 209

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 218


State 210

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 219


State 211

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 220


State 212

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE . expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 50

    expr         go to state 221
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 213

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 222


State 214

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 223
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 215

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 224


State 216

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 225


State 217

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 226
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 218

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 227


State 219

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 228
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 220

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 229


State 221

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr . HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG
   54 expr: expr . SUM term
   55     | expr . SUBSTRACT term
   60     | expr . LESS term
   61     | expr . LESS_EQUALS term
   62     | expr . GREATER term
   63     | expr . GREATER_EQUALS term
   64     | expr . EQUALS term
   65     | expr . NOT_EQUALS term
   66     | expr . AND term
   67     | expr . OR term
   69     | expr . AND_BIT term
   70     | expr . OR_BIT term
   71     | expr . XOR_BIT term
   72     | expr . LEFT_SHIFT term
   73     | expr . RIGHT_SHIFT term
   74     | expr . UNION term
   75     | expr . DIFFERENCE term
   76     | expr . INTERSECTION term

    SUM             shift, and go to state 65
    SUBSTRACT       shift, and go to state 66
    AND             shift, and go to state 67
    OR              shift, and go to state 68
    EQUALS          shift, and go to state 69
    NOT_EQUALS      shift, and go to state 70
    GREATER         shift, and go to state 71
    GREATER_EQUALS  shift, and go to state 72
    LESS            shift, and go to state 73
    LESS_EQUALS     shift, and go to state 74
    AND_BIT         shift, and go to state 75
    OR_BIT          shift, and go to state 76
    XOR_BIT         shift, and go to state 77
    LEFT_SHIFT      shift, and go to state 78
    RIGHT_SHIFT     shift, and go to state 79
    UNION           shift, and go to state 80
    DIFFERENCE      shift, and go to state 81
    INTERSECTION    shift, and go to state 82
    HEADER_END      shift, and go to state 230


State 222

   45 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 45 (if_instr)


State 223

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 231


State 224

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 232
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 225

   35 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 35 (while_instr)


State 226

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 233


State 227

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 234
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 228

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 235


State 229

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 236
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 230

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END . END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    END_OF_INSTR  shift, and go to state 237


State 231

   44 if_instr: expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG if_middle_block ELSE_IF_FOR_WHILE_CLAUSE IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 44 (if_instr)


State 232

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 238


State 233

   34 while_instr: expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG while_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 34 (while_instr)


State 234

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 239


State 235

   40 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 40 (for_instr)


State 236

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 240


State 237

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR . OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG

    OPEN_CONTEXT_TAG  shift, and go to state 241


State 238

   47 if_middle_block: if_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr IF_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 47 (if_middle_block)


State 239

   37 while_middle_block: while_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 37 (while_middle_block)


State 240

   39 for_instr: expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG for_middle_block ELSE_IF_FOR_WHILE_CLAUSE FOR_WHILE_CLAUSE HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 39 (for_instr)


State 241

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG . input CLOSE_CONTEXT_TAG

    FUN                 shift, and go to state 1
    GLOBAL              shift, and go to state 2
    STATIC              shift, and go to state 3
    INT_VAL             shift, and go to state 4
    REAL_VAL            shift, and go to state 5
    BOOL_VAL            shift, and go to state 6
    INT_TYPE            shift, and go to state 7
    REAL_TYPE           shift, and go to state 8
    BOOL_TYPE           shift, and go to state 9
    CHAR_TYPE           shift, and go to state 10
    SUBSTRACT           shift, and go to state 11
    INCREMENT           shift, and go to state 12
    DECREMENT           shift, and go to state 13
    NOT                 shift, and go to state 14
    CURLY_BRACKET_OPEN  shift, and go to state 15
    PARETHESES_OPEN     shift, and go to state 16
    END_OF_INSTR        shift, and go to state 17
    OPEN_CONTEXT_TAG    shift, and go to state 18
    CHAR_QUOTE          shift, and go to state 19
    STRING_QUOTE        shift, and go to state 20
    ID                  shift, and go to state 21

    $default  reduce using rule 4 (input)

    input        go to state 242
    data_init    go to state 23
    array_init   go to state 24
    data_type    go to state 25
    instr        go to state 26
    fun_init     go to state 27
    fun_call     go to state 28
    while_instr  go to state 29
    for_instr    go to state 30
    if_instr     go to state 31
    expr         go to state 32
    term         go to state 33
    power        go to state 34
    factor       go to state 35
    data_value   go to state 36
    data_vector  go to state 37


State 242

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input . CLOSE_CONTEXT_TAG

    CLOSE_CONTEXT_TAG  shift, and go to state 243


State 243

   42 for_middle_block: for_middle_block ELSE_IF_FOR_WHILE_CLAUSE expr FOR_WHILE_CLAUSE expr HEADER_END END_OF_INSTR OPEN_CONTEXT_TAG input CLOSE_CONTEXT_TAG .

    $default  reduce using rule 42 (for_middle_block)
