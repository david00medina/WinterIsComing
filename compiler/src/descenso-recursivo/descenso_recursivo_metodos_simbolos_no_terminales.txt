public final void input () {
	if (token.tipo == Token.GLOBAL || token.tipo == Token.STATIC || token.tipo == Token.INT_TYPE || token.tipo == Token.REAL_TYPE || token.tipo == Token.BOOL_TYPE || token.tipo == Token.CHAR_TYPE || token.tipo == Token.ID || token.tipo == Token.INCREMENT || token.tipo == Token.DECREMENT || token.tipo == Token.NOT || token.tipo == Token.PARETHESES_OPEN || token.tipo == Token.SUBSTRACT || token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.BOOL_VAL || token.tipo == Token.CHAR_QUOTE || token.tipo == Token.STRING_QUOTE || token.tipo == Token.CURLY_BRACKET_OPEN || token.tipo == Token.FUN) {
		instr();
		match(Token.END_OF_INSTR);
		input();
	} else if (token.tipo == Token.END_OF_INSTR) {
		match(Token.END_OF_INSTR);
		input();
	} else if (token.tipo == Token.OPEN_CONTEXT_TAG) {
		match(Token.OPEN_CONTEXT_TAG);
	} else if (token.tipo == Token.END_OF_PROGRAMM) {
		/* TERMINAR */
	} else {
		/* ERROR */
	}
}

public final void data_init () {
	if (token.tipo == Token.GLOBAL) {
		match(Token.GLOBAL);
		data_type();
	} else if (token.tipo == Token.STATIC) {
		match(Token.STATIC);
		data_type();
	} else if (token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.BOOL_VAL || token.tipo == Token.CHAR_VAL) {
		data_type();
		array_init();
	} else {
		/* ERROR */
	}
}

public final void array_init () {
	if (token.tipo == Token.SQUARE_BRACKET_OPEN) {
		match(Token.SQUARE_BRACKET_OPEN);
		array_init_p();
		match(Token.SQUARE_BRACKET_CLOSE);
	} else if (token.tipo != Token.ID) {
		/* ERROR */
	}
}

public final void array_init_p () {
	if (token.tipo == Token.INT_VAL) {
		match(Token.INT_VAL);
	} else if (token.tipo != Token.SQUARE_BRACKET_OPEN) {
		/* ERROR */
	}
}

public final void data_type () {
	if (token.tipo == Token.INT_TYPE) {
		match(Token.INT_TYPE);
	} else if (token.tipo == Token.REAL_TYPE) {
		match(Token.REAL_TYPE);
	} else if (token.tipo == Token.BOOL_TYPE) {
		match(Token.BOOL_TYPE);
	} else if (token.tipo == Token.CHAR_TYPE) {
		match(Token.CHAR_TYPE);
	} else {
		/* ERROR */
	}
}

public final void comma_exp_init () {
	if (token.tipo == Token.INT_TYPE || token.tipo == Token.REAL_TYPE || token.tipo == Token.BOOL_TYPE || token.tipo == Token.CHAR_TYPE) {
		data_type();
		match(Token.ID);
		match(Token.ELEM_SEPARATOR);
		comma_exp_init();
	} else if (token.tipo = Token.ELEM_SEPARATOR) {
		match(Token.ELEM_SEPARATOR);
		comma_exp_init();
	} else if (token.tipo != Token.PARETHESES_CLOSE) {
		/* ERROR */
	}
}

public final void comma_exp () {
	if (token.tipo == Token.PARETHESES_OPEN || token.tipo == Token.SUBSTRACT || token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.BOOL_VAL || token.tipo == Token.CHAR_QUOTE || token.tipo == Token.STRING_QUOTE) {
		expr();
		comma_expr_p();
	} else {
		/* ERROR */
	}
}

public final void comma_exp_p () {
	if (token.tipo == Token.ELEM_SEPARATOR) {
		match(Token.ELEM_SEPARATOR);
		comma_expr();
	} else if (token.tipo != Token.PARETHESES_CLOSE && token.tipo != Token.CURLY_BRACKET_CLOSE) {
		/* ERROR */
	}
}

public final void fun_init () {
	if (token.tipo == Token.FUN) {
		match(Token.FUN);
		fun_init_p_1();
		match(Token.ID);
		match(Token.PARETHESES_OPEN);
		comma_exp_init();
		match(Token.PARETHESES_CLOSE);
		fun_init_p_2();
	} else {
		/* ERROR */
	}
}

public final void fun_init_p_1 () {
	if (token.tipo == Token.VOID) {
		match(Token.VOID);
	} else if (token.tipo == Token.INT_TYPE || token.tipo == Token.REAL_TYPE || token.tipo == Token.BOOL_TYPE || token.tipo == Token.CHAR_TYPE) {
		data_type();
	} else {
		/* ERROR */
	}
}

public final void fun_init_p_2 () {
	if (token.tipo == Token.HEADER_END) {
		match(Token.HEADER_END);
		match(Token.END_OF_INSTR);
		input();
	} else if (token.tipo == Token.END_OF_INSTR) {
		match(Token.END_OF_INSTR);
	} else {
		/* ERROR */
	}
}

public final void fun_call () {
	if (token.tipo == Token.ID) {
		match(Token.ID);
		match(Token.PARETHESES_OPEN);
		comma_exp();
		match(Token.PARETHESES_CLOSE);
	} else {
		/* ERROR */
	}
}

public final void array_access () {
	if (token.tipo == Token.SQUARE_BRACKET_OPEN) {
		match(Token.SQUARE_BRACKET_OPEN);
		match(Token.INT_VAL);
		match(Token.SQUARE_BRACKET_CLOSE);
	} else {
		/* ERROR */
	}
}

public final void expr () {
	if (token.tipo == Token.ID) {
		match(Token.ID);
		expr_p_2();
		expr_p_1();
	} else if (token.tipo == Token.INCREMENT) {
		match(Token.INCREMENT);
		expr_p_1();
	} else if (token.tipo == Token.DECREMENT) {
		match(Token.DECREMENT);
		expr_p_1();
	} else if (token.tipo == Token.NOT) {
		match(Token.NOT
		expr_p_3();
		expr_p_1();
	} else {
		/* ERROR */
	}
}

public final void expr_p_1 () {
	
}

public final void expr_p_2 () {
	
}

public final void expr_p_3 () {
	
}

public final void term () {
	if (token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.CHAR_QUOTE || token.tipo == Token.STRING_QUOTE || token.tipo == Token.PARETHESES_OPEN || token.tipo == Token.SUBSTRACT) {
		factor();
		power();
		term_p_2();
	} else {
		/* ERROR */
	}
}

public final void term_p_1 () {
	if (token.tipo == Token.END_OF_INSTR || token.tipo == Token.ELEM_SEPARATOR || token.tipo == Token.PARETHESES_CLOSE || token.tipo == Token.CURLY_BRACKET_CLOSE || token.tipo == Token.FOR_WHILE_CLAUSE || token.tipo == Token.HEADER_END || token.tipo == Token.IF_CLAUSE || token.tipo == Token.SUM || token.tipo == Token.SUBSTRACT || token.tipo == Token.LESS || token.tipo == Token.LESS_EQUALS || token.tipo == Token.GREATER || token.tipo == Token.GREATER_EQUALS || token.tipo == Token.NOT_EQUALS || token.tipo == Token.AND || token.tipo == Token.OR || token.tipo == Token.AND_BIT || token.tipo == Token.OR_BIT || token.tipo == Token.XOR_BIT || token.tipo == Token.LEFT_SHIFT || token.tipo == Token.RIGHT_SHIFT || token.tipo == Token.UNION || token.tipo == Token.DIFFERENCE || token.tipo == Token.INTERSECTION || token.tipo == Token.PRODUCT || token.tipo == Token.DIVIDE || token.tipo == Token.MODULUS) {
		power();
	} else if (token.tipo == Token.SQUARE_BRACKET_OPEN) {
		array_access();
	} else {
		/* ERROR */
	}
}

public final void term_p_2 () {
	if (token.tipo == Token.PRODUCT) {
		match(Token.PRODUCT);
		term_p_3();
	} else if (token.tipo == Token.DIVIDE) {
		match(Token.DIVIDE);
		term_p_3();
	} else if (token.tipo == Token.MODULUS) {
		match(Token.MODULUS);
		term_p_3();
	} else () {
		/* ERROR */
	}
}

public final void term_p_3 () {
	if (token.tipo == Token.PARETHESES_OPEN || token.tipo == Token.SUBSTRACT || token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.CHAR_QUOTE || token.tipo == Token.STRING_QUOTE) {
		term();
	} else if (token.tipo == Token.ID) {
		match(Token.ID);
		term_p_1();
		term_p_2();
	} else {
		/* ERROR */
	}
}

public final void power () {
	if (token.tipo == Token.RADICAL) {
		match(token.RADICAL);
		term();
	} else if (token.tipo == Token.POWER) {
		match(Token.POWER);
		term();
	} else {
		/* ERROR */
	}
}

public final void factor () {
	if (token.tipo == Token.PARETHESES_OPEN) {
		match(Token.PARETHESES_OPEN);
		expr();
		match(Token.PARETHESES_CLOSE);
	} else if (token.tipo == Token.SUBSTRACT) {
		match(Token.SUBSTRACT);
		factor_p();
	} else if (token.tipo == Token.INT_VAL || token.tipo == Token.REAL_VAL || token.tipo == Token.CHAR_QUOTE || token.tipo == Token.STRING_QUOTE) {
		data_value();
	} else {
		/* ERROR */
	}
}

public final void data_value () {
	if (token.tipo == Token.INT_VAL) {
		match(Token.INT_VAL);
	} else if (token.tipo == Token.REAL_VAL) {
		match(Token.REAL_VAL);
	} else if (token.tipo == Token.BOOL_VAL) {
		match(Token.BOOL_VAL);
	} else if (token.tipo == Token.CHAR_QUOTE) {
		match(Token.CHAR_QUOTE);
		match(Token.CHAR_VAL);
		match(Token.CHAR_QUOTE);
	} else if (token.tipo == Token.STRING_QUOTE) {
		match(Token.STRING_QUOTE);
		match(Token.STRING_VAL);
		match(Token.STRING_QUOTE);
	} else {
		/* ERROR */
	}
}

public final void data_vector () {
	if (token.tipo == Token.CURLY_BRACKET_OPEN) {
		match(Token.CURLY_BRACKET_OPEN);
		comma_exp();
		match(Token.CURLY_BRACKET_CLOSE);
	} else {
		/* ERROR */
	}
}

public final void match (int tokenEsperado) {
	if (token.tipo == tokenEsperado) {
		token = lexico.getNextToken();
	} else {
		/* ERROR */
	}
}